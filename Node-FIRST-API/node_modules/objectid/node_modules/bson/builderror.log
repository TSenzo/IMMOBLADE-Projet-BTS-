gyp info it worked if it ends with ok
gyp info using node-gyp@10.0.1
gyp info using node@18.18.2 | linux | x64
gyp info find Python using Python version 3.11.1 found at "/usr/bin/python3"
gyp info spawn /usr/bin/python3
gyp info spawn args [
gyp info spawn args '/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/gyp_main.py',
gyp info spawn args 'binding.gyp',
gyp info spawn args '-f',
gyp info spawn args 'make',
gyp info spawn args '-I',
gyp info spawn args '/home/snir2g1/Documents/Dossiers2023/Projet2023/IHM+SERVEUR/Node-FIRST-API/node_modules/objectid/node_modules/bson/build/config.gypi',
gyp info spawn args '-I',
gyp info spawn args '/usr/local/lib/node_modules/npm/node_modules/node-gyp/addon.gypi',
gyp info spawn args '-I',
gyp info spawn args '/home/snir2g1/.cache/node-gyp/18.18.2/include/node/common.gypi',
gyp info spawn args '-Dlibrary=shared_library',
gyp info spawn args '-Dvisibility=default',
gyp info spawn args '-Dnode_root_dir=/home/snir2g1/.cache/node-gyp/18.18.2',
gyp info spawn args '-Dnode_gyp_dir=/usr/local/lib/node_modules/npm/node_modules/node-gyp',
gyp info spawn args '-Dnode_lib_file=/home/snir2g1/.cache/node-gyp/18.18.2/<(target_arch)/node.lib',
gyp info spawn args '-Dmodule_root_dir=/home/snir2g1/Documents/Dossiers2023/Projet2023/IHM+SERVEUR/Node-FIRST-API/node_modules/objectid/node_modules/bson',
gyp info spawn args '-Dnode_engine=v8',
gyp info spawn args '--depth=.',
gyp info spawn args '--no-parallel',
gyp info spawn args '--generator-output',
gyp info spawn args 'build',
gyp info spawn args '-Goutput_dir=.'
gyp info spawn args ]
gyp info spawn make
gyp info spawn args [ 'BUILDTYPE=Release', '-C', 'build' ]
Dans le fichier inclus depuis ../ext/bson.cc:35:
../ext/bson.h:55:32: erreur: « Handle » n'a pas été déclaré
   55 |         static void Initialize(Handle<Object> target);
      |                                ^~~~~~
../ext/bson.h:55:38: erreur: expected « , » or « ... » before « < » token
   55 |         static void Initialize(Handle<Object> target);
      |                                      ^
../ext/bson.h:56:16: erreur: « Handle » ne nomme pas un type
   56 |         static Handle<Value> BSONDeserializeStream(const Arguments &args);
      |                ^~~~~~
../ext/bson.h:59:16: erreur: « Handle » ne nomme pas un type
   59 |         static Handle<Value> BSONSerialize(const Arguments &args);
      |                ^~~~~~
../ext/bson.h:60:16: erreur: « Handle » ne nomme pas un type
   60 |         static Handle<Value> BSONDeserialize(const Arguments &args);
      |                ^~~~~~
../ext/bson.h:63:16: erreur: « Handle » ne nomme pas un type
   63 |         static Handle<Value> CalculateObjectSize(const Arguments &args);
      |                ^~~~~~
../ext/bson.h:64:16: erreur: « Handle » ne nomme pas un type
   64 |         static Handle<Value> SerializeWithBufferAndIndex(const Arguments &args);
      |                ^~~~~~
../ext/bson.h:70:16: erreur: « Handle » ne nomme pas un type
   70 |         static Handle<Value> New(const Arguments &args);
      |                ^~~~~~
../ext/bson.h:71:16: erreur: « Handle » ne nomme pas un type
   71 |         static Handle<Value> deserialize(BSON *bson, char *data, uint32_t dataLength, uint32_t startIndex, bool is_array_item);
      |                ^~~~~~
../ext/bson.h:119:48: erreur: « Handle » ne nomme pas un type
  119 |         Local<Object> GetSerializeObject(const Handle<Value>& object);
      |                                                ^~~~~~
../ext/bson.h:119:54: erreur: expected « , » or « ... » before « < » token
  119 |         Local<Object> GetSerializeObject(const Handle<Value>& object);
      |                                                      ^
../ext/bson.h:133:33: erreur: « Handle » ne nomme pas un type
  133 |         void    WriteByte(const Handle<Object>&, const Handle<String>&) { ++count; }
      |                                 ^~~~~~
../ext/bson.h:133:39: erreur: expected « , » or « ... » before « < » token
  133 |         void    WriteByte(const Handle<Object>&, const Handle<String>&) { ++count; }
      |                                       ^
../ext/bson.h:133:17: erreur: « void CountStream::WriteByte(int) » ne peut pas être surchargé par « void CountStream::WriteByte(int) »
  133 |         void    WriteByte(const Handle<Object>&, const Handle<String>&) { ++count; }
      |                 ^~~~~~~~~
../ext/bson.h:132:17: note: déclaration précédente de « void CountStream::WriteByte(int) »
  132 |         void    WriteByte(int value)                                                                    { ++count; }
      |                 ^~~~~~~~~
../ext/bson.h:134:33: erreur: « Handle » ne nomme pas un type
  134 |         void    WriteBool(const Handle<Value>& value)                                   { ++count; }
      |                                 ^~~~~~
../ext/bson.h:134:39: erreur: expected « , » or « ... » before « < » token
  134 |         void    WriteBool(const Handle<Value>& value)                                   { ++count; }
      |                                       ^
../ext/bson.h:136:34: erreur: « Handle » ne nomme pas un type
  136 |         void    WriteInt32(const Handle<Value>& value)                                  { count += 4; }
      |                                  ^~~~~~
../ext/bson.h:136:40: erreur: expected « , » or « ... » before « < » token
  136 |         void    WriteInt32(const Handle<Value>& value)                                  { count += 4; }
      |                                        ^
../ext/bson.h:136:17: erreur: « void CountStream::WriteInt32(int) » ne peut pas être surchargé par « void CountStream::WriteInt32(int32_t) »
  136 |         void    WriteInt32(const Handle<Value>& value)                                  { count += 4; }
      |                 ^~~~~~~~~~
../ext/bson.h:135:17: note: déclaration précédente de « void CountStream::WriteInt32(int32_t) »
  135 |         void    WriteInt32(int32_t value)                                                               { count += 4; }
      |                 ^~~~~~~~~~
../ext/bson.h:137:34: erreur: « Handle » ne nomme pas un type
  137 |         void    WriteInt32(const Handle<Object>& object, const Handle<String>& key) { count += 4; }
      |                                  ^~~~~~
../ext/bson.h:137:40: erreur: expected « , » or « ... » before « < » token
  137 |         void    WriteInt32(const Handle<Object>& object, const Handle<String>& key) { count += 4; }
      |                                        ^
../ext/bson.h:137:17: erreur: « void CountStream::WriteInt32(int) » ne peut pas être surchargé par « void CountStream::WriteInt32(int32_t) »
  137 |         void    WriteInt32(const Handle<Object>& object, const Handle<String>& key) { count += 4; }
      |                 ^~~~~~~~~~
../ext/bson.h:135:17: note: déclaration précédente de « void CountStream::WriteInt32(int32_t) »
  135 |         void    WriteInt32(int32_t value)                                                               { count += 4; }
      |                 ^~~~~~~~~~
../ext/bson.h:139:34: erreur: « Handle » ne nomme pas un type
  139 |         void    WriteInt64(const Handle<Value>& value)                                  { count += 8; }
      |                                  ^~~~~~
../ext/bson.h:139:40: erreur: expected « , » or « ... » before « < » token
  139 |         void    WriteInt64(const Handle<Value>& value)                                  { count += 8; }
      |                                        ^
../ext/bson.h:141:35: erreur: « Handle » ne nomme pas un type
  141 |         void    WriteDouble(const Handle<Value>& value)                                 { count += 8; }
      |                                   ^~~~~~
../ext/bson.h:141:41: erreur: expected « , » or « ... » before « < » token
  141 |         void    WriteDouble(const Handle<Value>& value)                                 { count += 8; }
      |                                         ^
../ext/bson.h:142:35: erreur: « Handle » ne nomme pas un type
  142 |         void    WriteDouble(const Handle<Object>&, const Handle<String>&) { count += 8; }
      |                                   ^~~~~~
../ext/bson.h:142:41: erreur: expected « , » or « ... » before « < » token
  142 |         void    WriteDouble(const Handle<Object>&, const Handle<String>&) { count += 8; }
      |                                         ^
../ext/bson.h:142:17: erreur: « void CountStream::WriteDouble(int) » ne peut pas être surchargé par « void CountStream::WriteDouble(int) »
  142 |         void    WriteDouble(const Handle<Object>&, const Handle<String>&) { count += 8; }
      |                 ^~~~~~~~~~~
../ext/bson.h:141:17: note: déclaration précédente de « void CountStream::WriteDouble(int) »
  141 |         void    WriteDouble(const Handle<Value>& value)                                 { count += 8; }
      |                 ^~~~~~~~~~~
../ext/bson.h:145:37: erreur: « Handle » ne nomme pas un type
  145 |         void    WriteObjectId(const Handle<Object>& object, const Handle<String>& key)                          { count += 12; }
      |                                     ^~~~~~
../ext/bson.h:145:43: erreur: expected « , » or « ... » before « < » token
  145 |         void    WriteObjectId(const Handle<Object>& object, const Handle<String>& key)                          { count += 12; }
      |                                           ^
../ext/bson.h: Dans la fonction membre « void CountStream::WriteLengthPrefixedString(const v8::Local<v8::String>&) »:
../ext/bson.h:144:101: erreur: pas de fonction concordante pour l'appel à « v8::String::Utf8Length() »
  144 |         void    WriteLengthPrefixedString(const Local<String>& value)   { count += value->Utf8Length()+5; }
      |                                                                                    ~~~~~~~~~~~~~~~~~^~
Dans le fichier inclus depuis /home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:11,
                 depuis /home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-array-buffer.h:13,
                 depuis /home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8.h:24,
                 depuis ../ext/bson.cc:14:
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-primitive.h:142:7: note: candidat : « int v8::String::Utf8Length(v8::Isolate*) const »
  142 |   int Utf8Length(Isolate* isolate) const;
      |       ^~~~~~~~~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-primitive.h:142:7: note:   le candidat attend 1 argument, 0 fourni(s)
../ext/bson.h: Dans la fonction membre « void CountStream::WriteString(const v8::Local<v8::String>&) »:
../ext/bson.h:146:117: erreur: pas de fonction concordante pour l'appel à « v8::String::Utf8Length() »
  146 |         void    WriteString(const Local<String>& value)                                 { count += value->Utf8Length() + 1; }   // This returns the number of bytes exclusive of the NULL terminator
      |                                                                                                    ~~~~~~~~~~~~~~~~~^~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-primitive.h:142:7: note: candidat : « int v8::String::Utf8Length(v8::Isolate*) const »
  142 |   int Utf8Length(Isolate* isolate) const;
      |       ^~~~~~~~~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-primitive.h:142:7: note:   le candidat attend 1 argument, 0 fourni(s)
../ext/bson.h: Au niveau global:
../ext/bson.h:169:33: erreur: « Handle » ne nomme pas un type
  169 |         void    WriteByte(const Handle<Object>& object, const Handle<String>& key)      { *p++ = object->Get(key)->Int32Value(); }
      |                                 ^~~~~~
../ext/bson.h:169:39: erreur: expected « , » or « ... » before « < » token
  169 |         void    WriteByte(const Handle<Object>& object, const Handle<String>& key)      { *p++ = object->Get(key)->Int32Value(); }
      |                                       ^
../ext/bson.h:169:17: erreur: « void DataStream::WriteByte(int) » ne peut pas être surchargé par « void DataStream::WriteByte(int) »
  169 |         void    WriteByte(const Handle<Object>& object, const Handle<String>& key)      { *p++ = object->Get(key)->Int32Value(); }
      |                 ^~~~~~~~~
../ext/bson.h:168:17: note: déclaration précédente de « void DataStream::WriteByte(int) »
  168 |         void    WriteByte(int value)                                                                    { *p++ = value; }
      |                 ^~~~~~~~~
../ext/bson.h:179:33: erreur: « Handle » ne nomme pas un type
  179 |         void    WriteBool(const Handle<Value>& value)                                   { WriteByte(value->BooleanValue() ? 1 : 0); }
      |                                 ^~~~~~
../ext/bson.h:179:39: erreur: expected « , » or « ... » before « < » token
  179 |         void    WriteBool(const Handle<Value>& value)                                   { WriteByte(value->BooleanValue() ? 1 : 0); }
      |                                       ^
../ext/bson.h:180:34: erreur: « Handle » ne nomme pas un type
  180 |         void    WriteInt32(const Handle<Value>& value)                                  { WriteInt32(value->Int32Value());                      }
      |                                  ^~~~~~
../ext/bson.h:180:40: erreur: expected « , » or « ... » before « < » token
  180 |         void    WriteInt32(const Handle<Value>& value)                                  { WriteInt32(value->Int32Value());                      }
      |                                        ^
../ext/bson.h:180:17: erreur: « void DataStream::WriteInt32(int) » ne peut pas être surchargé par « void DataStream::WriteInt32(int32_t) »
  180 |         void    WriteInt32(const Handle<Value>& value)                                  { WriteInt32(value->Int32Value());                      }
      |                 ^~~~~~~~~~
../ext/bson.h:171:17: note: déclaration précédente de « void DataStream::WriteInt32(int32_t) »
  171 |         void    WriteInt32(int32_t value)                                                               { *reinterpret_cast<int32_t*>(p) = value; p += 4; }
      |                 ^~~~~~~~~~
../ext/bson.h:181:34: erreur: « Handle » ne nomme pas un type
  181 |         void    WriteInt32(const Handle<Object>& object, const Handle<String>& key) { WriteInt32(object->Get(key)); }
      |                                  ^~~~~~
../ext/bson.h:181:40: erreur: expected « , » or « ... » before « < » token
  181 |         void    WriteInt32(const Handle<Object>& object, const Handle<String>& key) { WriteInt32(object->Get(key)); }
      |                                        ^
../ext/bson.h:181:17: erreur: « void DataStream::WriteInt32(int) » ne peut pas être surchargé par « void DataStream::WriteInt32(int32_t) »
  181 |         void    WriteInt32(const Handle<Object>& object, const Handle<String>& key) { WriteInt32(object->Get(key)); }
      |                 ^~~~~~~~~~
../ext/bson.h:171:17: note: déclaration précédente de « void DataStream::WriteInt32(int32_t) »
  171 |         void    WriteInt32(int32_t value)                                                               { *reinterpret_cast<int32_t*>(p) = value; p += 4; }
      |                 ^~~~~~~~~~
../ext/bson.h:182:34: erreur: « Handle » ne nomme pas un type
  182 |         void    WriteInt64(const Handle<Value>& value)                                  { WriteInt64(value->IntegerValue());            }
      |                                  ^~~~~~
../ext/bson.h:182:40: erreur: expected « , » or « ... » before « < » token
  182 |         void    WriteInt64(const Handle<Value>& value)                                  { WriteInt64(value->IntegerValue());            }
      |                                        ^
../ext/bson.h:183:35: erreur: « Handle » ne nomme pas un type
  183 |         void    WriteDouble(const Handle<Value>& value)                                 { WriteDouble(value->NumberValue());            }
      |                                   ^~~~~~
../ext/bson.h:183:41: erreur: expected « , » or « ... » before « < » token
  183 |         void    WriteDouble(const Handle<Value>& value)                                 { WriteDouble(value->NumberValue());            }
      |                                         ^
../ext/bson.h:184:35: erreur: « Handle » ne nomme pas un type
  184 |         void    WriteDouble(const Handle<Object>& object, const Handle<String>& key) { WriteDouble(object->Get(key)); }
      |                                   ^~~~~~
../ext/bson.h:184:41: erreur: expected « , » or « ... » before « < » token
  184 |         void    WriteDouble(const Handle<Object>& object, const Handle<String>& key) { WriteDouble(object->Get(key)); }
      |                                         ^
../ext/bson.h:184:17: erreur: « void DataStream::WriteDouble(int) » ne peut pas être surchargé par « void DataStream::WriteDouble(int) »
  184 |         void    WriteDouble(const Handle<Object>& object, const Handle<String>& key) { WriteDouble(object->Get(key)); }
      |                 ^~~~~~~~~~~
../ext/bson.h:183:17: note: déclaration précédente de « void DataStream::WriteDouble(int) »
  183 |         void    WriteDouble(const Handle<Value>& value)                                 { WriteDouble(value->NumberValue());            }
      |                 ^~~~~~~~~~~
../ext/bson.h:187:37: erreur: « Handle » ne nomme pas un type
  187 |         void    WriteObjectId(const Handle<Object>& object, const Handle<String>& key);
      |                                     ^~~~~~
../ext/bson.h:187:43: erreur: expected « , » or « ... » before « < » token
  187 |         void    WriteObjectId(const Handle<Object>& object, const Handle<String>& key);
      |                                           ^
../ext/bson.h: Dans la fonction membre « void DataStream::WriteByte(int) »:
../ext/bson.h:169:98: erreur: « object » n'a pas été déclaré dans cette portée
  169 |         void    WriteByte(const Handle<Object>& object, const Handle<String>& key)      { *p++ = object->Get(key)->Int32Value(); }
      |                                                                                                  ^~~~~~
../ext/bson.h:169:110: erreur: « key » n'a pas été déclaré dans cette portée; vouliez-vous employer « key_t » ?
  169 |         void    WriteByte(const Handle<Object>& object, const Handle<String>& key)      { *p++ = object->Get(key)->Int32Value(); }
      |                                                                                                              ^~~
      |                                                                                                              key_t
../ext/bson.h: Dans la fonction membre « void DataStream::WriteBool(int) »:
../ext/bson.h:179:101: erreur: « value » n'a pas été déclaré dans cette portée
  179 |         void    WriteBool(const Handle<Value>& value)                                   { WriteByte(value->BooleanValue() ? 1 : 0); }
      |                                                                                                     ^~~~~
../ext/bson.h: Dans la fonction membre « void DataStream::WriteInt32(int) »:
../ext/bson.h:180:102: erreur: « value » n'a pas été déclaré dans cette portée
  180 |         void    WriteInt32(const Handle<Value>& value)                                  { WriteInt32(value->Int32Value());                      }
      |                                                                                                      ^~~~~
../ext/bson.h: Dans la fonction membre « void DataStream::WriteInt32(int) »:
../ext/bson.h:181:98: erreur: « object » n'a pas été déclaré dans cette portée
  181 |         void    WriteInt32(const Handle<Object>& object, const Handle<String>& key) { WriteInt32(object->Get(key)); }
      |                                                                                                  ^~~~~~
../ext/bson.h:181:110: erreur: « key » n'a pas été déclaré dans cette portée; vouliez-vous employer « key_t » ?
  181 |         void    WriteInt32(const Handle<Object>& object, const Handle<String>& key) { WriteInt32(object->Get(key)); }
      |                                                                                                              ^~~
      |                                                                                                              key_t
../ext/bson.h: Dans la fonction membre « void DataStream::WriteInt64(int) »:
../ext/bson.h:182:102: erreur: « value » n'a pas été déclaré dans cette portée
  182 |         void    WriteInt64(const Handle<Value>& value)                                  { WriteInt64(value->IntegerValue());            }
      |                                                                                                      ^~~~~
../ext/bson.h: Dans la fonction membre « void DataStream::WriteDouble(int) »:
../ext/bson.h:183:103: erreur: « value » n'a pas été déclaré dans cette portée
  183 |         void    WriteDouble(const Handle<Value>& value)                                 { WriteDouble(value->NumberValue());            }
      |                                                                                                       ^~~~~
../ext/bson.h: Dans la fonction membre « void DataStream::WriteDouble(int) »:
../ext/bson.h:184:100: erreur: « object » n'a pas été déclaré dans cette portée
  184 |         void    WriteDouble(const Handle<Object>& object, const Handle<String>& key) { WriteDouble(object->Get(key)); }
      |                                                                                                    ^~~~~~
../ext/bson.h:184:112: erreur: « key » n'a pas été déclaré dans cette portée; vouliez-vous employer « key_t » ?
  184 |         void    WriteDouble(const Handle<Object>& object, const Handle<String>& key) { WriteDouble(object->Get(key)); }
      |                                                                                                                ^~~
      |                                                                                                                key_t
../ext/bson.h: Dans la fonction membre « void DataStream::WriteLengthPrefixedString(const v8::Local<v8::String>&) »:
../ext/bson.h:186:103: erreur: pas de fonction concordante pour l'appel à « v8::String::Utf8Length() »
  186 |         void    WriteLengthPrefixedString(const Local<String>& value)   { WriteInt32(value->Utf8Length()+1); WriteString(value); }
      |                                                                                      ~~~~~~~~~~~~~~~~~^~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-primitive.h:142:7: note: candidat : « int v8::String::Utf8Length(v8::Isolate*) const »
  142 |   int Utf8Length(Isolate* isolate) const;
      |       ^~~~~~~~~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-primitive.h:142:7: note:   le candidat attend 1 argument, 0 fourni(s)
../ext/bson.h: Dans la fonction membre « void DataStream::WriteString(const v8::Local<v8::String>&) »:
../ext/bson.h:188:112: erreur: pas de fonction concordante pour l'appel à « v8::String::WriteUtf8(char*&) »
  188 |         void    WriteString(const Local<String>& value)                                 { p += value->WriteUtf8(p); }           // This returns the number of bytes inclusive of the NULL terminator.
      |                                                                                                ~~~~~~~~~~~~~~~~^~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-primitive.h:202:7: note: candidat : « int v8::String::WriteUtf8(v8::Isolate*, char*, int, int*, int) const »
  202 |   int WriteUtf8(Isolate* isolate, char* buffer, int length = -1,
      |       ^~~~~~~~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-primitive.h:202:7: note:   le candidat attend 5 arguments, 1 fourni(s)
../ext/bson.h: Au niveau global:
../ext/bson.h:219:38: erreur: « Handle » ne nomme pas un type
  219 |         void SerializeDocument(const Handle<Value>& value);
      |                                      ^~~~~~
../ext/bson.h:219:44: erreur: expected « , » or « ... » before « < » token
  219 |         void SerializeDocument(const Handle<Value>& value);
      |                                            ^
../ext/bson.h:220:35: erreur: « Handle » ne nomme pas un type
  220 |         void SerializeArray(const Handle<Value>& value);
      |                                   ^~~~~~
../ext/bson.h:220:41: erreur: expected « , » or « ... » before « < » token
  220 |         void SerializeArray(const Handle<Value>& value);
      |                                         ^
../ext/bson.h:221:55: erreur: « Handle » ne nomme pas un type
  221 |         void SerializeValue(void* typeLocation, const Handle<Value>& value);
      |                                                       ^~~~~~
../ext/bson.h:221:61: erreur: expected « , » or « ... » before « < » token
  221 |         void SerializeValue(void* typeLocation, const Handle<Value>& value);
      |                                                             ^
../ext/bson.h:237:9: erreur: « Handle » ne nomme pas un type
  237 |         Handle<Value> DeserializeDocument();
      |         ^~~~~~
../ext/bson.h:262:9: erreur: « Handle » ne nomme pas un type
  262 |         Handle<Value> DeserializeArray();
      |         ^~~~~~
../ext/bson.h:263:9: erreur: « Handle » ne nomme pas un type
  263 |         Handle<Value> DeserializeValue(BsonType type);
      |         ^~~~~~
../ext/bson.h:264:9: erreur: « Handle » ne nomme pas un type
  264 |         Handle<Value> DeserializeDocumentInternal();
      |         ^~~~~~
../ext/bson.h:265:9: erreur: « Handle » ne nomme pas un type
  265 |         Handle<Value> DeserializeArrayInternal();
      |         ^~~~~~
../ext/bson.cc:42:38: erreur: « Handle » ne nomme pas un type
   42 | void DataStream::WriteObjectId(const Handle<Object>& object, const Handle<String>& key)
      |                                      ^~~~~~
../ext/bson.cc:42:44: erreur: expected « , » or « ... » before « < » token
   42 | void DataStream::WriteObjectId(const Handle<Object>& object, const Handle<String>& key)
      |                                            ^
../ext/bson.cc: Dans la fonction membre « void DataStream::WriteObjectId(int) »:
../ext/bson.cc:45:9: erreur: « object » n'a pas été déclaré dans cette portée
   45 |         object->Get(key)->ToString()->Write(buffer, 0, 12);
      |         ^~~~~~
../ext/bson.cc:45:21: erreur: « key » n'a pas été déclaré dans cette portée; vouliez-vous employer « key_t » ?
   45 |         object->Get(key)->ToString()->Write(buffer, 0, 12);
      |                     ^~~
      |                     key_t
../ext/bson.cc: Dans la fonction membre « void DataStream::CheckKey(const v8::Local<v8::String>&) »:
../ext/bson.cc:65:47: erreur: pas de fonction concordante pour l'appel à « v8::String::Utf8Length() »
   65 |         size_t keyLength = keyName->Utf8Length();
      |                            ~~~~~~~~~~~~~~~~~~~^~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-primitive.h:142:7: note: candidat : « int v8::String::Utf8Length(v8::Isolate*) const »
  142 |   int Utf8Length(Isolate* isolate) const;
      |       ^~~~~~~~~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-primitive.h:142:7: note:   le candidat attend 1 argument, 0 fourni(s)
../ext/bson.cc:69:27: erreur: pas de fonction concordante pour l'appel à « v8::String::WriteUtf8(char*&) »
   69 |         keyName->WriteUtf8(keyStringBuffer);
      |         ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-primitive.h:202:7: note: candidat : « int v8::String::WriteUtf8(v8::Isolate*, char*, int, int*, int) const »
  202 |   int WriteUtf8(Isolate* isolate, char* buffer, int length = -1,
      |       ^~~~~~~~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-primitive.h:202:7: note:   le candidat attend 5 arguments, 1 fourni(s)
../ext/bson.cc: Au niveau global:
../ext/bson.cc:82:70: erreur: « Handle » ne nomme pas un type
   82 | template<typename T> void BSONSerializer<T>::SerializeDocument(const Handle<Value>& value)
      |                                                                      ^~~~~~
../ext/bson.cc:82:76: erreur: expected « , » or « ... » before « < » token
   82 | template<typename T> void BSONSerializer<T>::SerializeDocument(const Handle<Value>& value)
      |                                                                            ^
../ext/bson.cc: Dans la fonction membre « void BSONSerializer<T>::SerializeDocument(int) »:
../ext/bson.cc:85:57: erreur: « value » n'a pas été déclaré dans cette portée
   85 |         Local<Object> object = bson->GetSerializeObject(value);
      |                                                         ^~~~~
../ext/bson.cc:91:61: erreur: pas de fonction concordante pour l'appel à « v8::Object::GetOwnPropertyNames() »
   91 |     Local<Array> propertyNames = object->GetOwnPropertyNames();
      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:410:43: note: candidat : « v8::MaybeLocal<v8::Array> v8::Object::GetOwnPropertyNames(v8::Local<v8::Context>) »
  410 |   V8_WARN_UNUSED_RESULT MaybeLocal<Array> GetOwnPropertyNames(
      |                                           ^~~~~~~~~~~~~~~~~~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:410:43: note:   le candidat attend 1 argument, 0 fourni(s)
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:419:43: note: candidat : « v8::MaybeLocal<v8::Array> v8::Object::GetOwnPropertyNames(v8::Local<v8::Context>, v8::PropertyFilter, v8::KeyConversionMode) »
  419 |   V8_WARN_UNUSED_RESULT MaybeLocal<Array> GetOwnPropertyNames(
      |                                           ^~~~~~~~~~~~~~~~~~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:419:43: note:   le candidat attend 3 arguments, 0 fourni(s)
../ext/bson.cc:98:71: erreur: pas de fonction concordante pour l'appel à « v8::Array::Get(int&) »
   98 |                 const Local<String>& propertyName = propertyNames->Get(i)->ToString();
      |                                                     ~~~~~~~~~~~~~~~~~~^~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:290:43: note: candidat : « v8::MaybeLocal<v8::Value> v8::Object::Get(v8::Local<v8::Context>, v8::Local<v8::Value>) »
  290 |   V8_WARN_UNUSED_RESULT MaybeLocal<Value> Get(Local<Context> context,
      |                                           ^~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:290:43: note:   le candidat attend 2 arguments, 1 fourni(s)
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:293:43: note: candidat : « v8::MaybeLocal<v8::Value> v8::Object::Get(v8::Local<v8::Context>, uint32_t) »
  293 |   V8_WARN_UNUSED_RESULT MaybeLocal<Value> Get(Local<Context> context,
      |                                           ^~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:293:43: note:   le candidat attend 2 arguments, 1 fourni(s)
../ext/bson.cc:101:64: erreur: pas de fonction concordante pour l'appel à « v8::Object::Get(const v8::Local<v8::String>&) »
  101 |                 const Local<Value>& propertyValue = object->Get(propertyName);
      |                                                     ~~~~~~~~~~~^~~~~~~~~~~~~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:290:43: note: candidat : « v8::MaybeLocal<v8::Value> v8::Object::Get(v8::Local<v8::Context>, v8::Local<v8::Value>) »
  290 |   V8_WARN_UNUSED_RESULT MaybeLocal<Value> Get(Local<Context> context,
      |                                           ^~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:290:43: note:   le candidat attend 2 arguments, 1 fourni(s)
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:293:43: note: candidat : « v8::MaybeLocal<v8::Value> v8::Object::Get(v8::Local<v8::Context>, uint32_t) »
  293 |   V8_WARN_UNUSED_RESULT MaybeLocal<Value> Get(Local<Context> context,
      |                                           ^~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:293:43: note:   le candidat attend 2 arguments, 1 fourni(s)
../ext/bson.cc: Au niveau global:
../ext/bson.cc:115:67: erreur: « Handle » ne nomme pas un type
  115 | template<typename T> void BSONSerializer<T>::SerializeArray(const Handle<Value>& value)
      |                                                                   ^~~~~~
../ext/bson.cc:115:73: erreur: expected « , » or « ... » before « < » token
  115 | template<typename T> void BSONSerializer<T>::SerializeArray(const Handle<Value>& value)
      |                                                                         ^
../ext/bson.cc: Dans la fonction membre « void BSONSerializer<T>::SerializeArray(int) »:
../ext/bson.cc:119:49: erreur: « value » n'a pas été déclaré dans cette portée
  119 |         Local<Array> array = Local<Array>::Cast(value->ToObject());
      |                                                 ^~~~~
../ext/bson.cc:126:56: erreur: pas de fonction concordante pour l'appel à « v8::Array::Get(uint32_t&) »
  126 |                 SerializeValue(typeLocation, array->Get(i));
      |                                              ~~~~~~~~~~^~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:290:43: note: candidat : « v8::MaybeLocal<v8::Value> v8::Object::Get(v8::Local<v8::Context>, v8::Local<v8::Value>) »
  290 |   V8_WARN_UNUSED_RESULT MaybeLocal<Value> Get(Local<Context> context,
      |                                           ^~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:290:43: note:   le candidat attend 2 arguments, 1 fourni(s)
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:293:43: note: candidat : « v8::MaybeLocal<v8::Value> v8::Object::Get(v8::Local<v8::Context>, uint32_t) »
  293 |   V8_WARN_UNUSED_RESULT MaybeLocal<Value> Get(Local<Context> context,
      |                                           ^~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:293:43: note:   le candidat attend 2 arguments, 1 fourni(s)
../ext/bson.cc: Au niveau global:
../ext/bson.cc:136:87: erreur: « Handle » ne nomme pas un type
  136 | template<typename T> void BSONSerializer<T>::SerializeValue(void* typeLocation, const Handle<Value>& value)
      |                                                                                       ^~~~~~
../ext/bson.cc:136:93: erreur: expected « , » or « ... » before « < » token
  136 | template<typename T> void BSONSerializer<T>::SerializeValue(void* typeLocation, const Handle<Value>& value)
      |                                                                                             ^
../ext/bson.cc: Dans la fonction membre « void BSONSerializer<T>::SerializeValue(void*, int) »:
../ext/bson.cc:138:12: erreur: « value » n'a pas été déclaré dans cette portée
  138 |         if(value->IsNumber())
      |            ^~~~~
../ext/bson.cc:176:23: erreur: « Handle » ne nomme pas un type
  176 |                 const Handle<RegExp>& regExp = Handle<RegExp>::Cast(value);
      |                       ^~~~~~
../ext/bson.cc:178:35: erreur: « regExp » n'a pas été déclaré dans cette portée
  178 |                 this->WriteString(regExp->GetSource());
      |                                   ^~~~~~
../ext/bson.cc:194:31: erreur: pas de fonction concordante pour l'appel à « v8::Object::Has(v8::Persistent<v8::String>&) »
  194 |                 if(object->Has(bson->_bsontypeString))
      |                    ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:325:37: note: candidat : « v8::Maybe<bool> v8::Object::Has(v8::Local<v8::Context>, v8::Local<v8::Value>) »
  325 |   V8_WARN_UNUSED_RESULT Maybe<bool> Has(Local<Context> context,
      |                                     ^~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:325:37: note:   le candidat attend 2 arguments, 1 fourni(s)
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:331:37: note: candidat : « v8::Maybe<bool> v8::Object::Has(v8::Local<v8::Context>, uint32_t) »
  331 |   V8_WARN_UNUSED_RESULT Maybe<bool> Has(Local<Context> context, uint32_t index);
      |                                     ^~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:331:37: note:   le candidat attend 2 arguments, 1 fourni(s)
../ext/bson.cc:197:44: erreur: l'opérande de base de « -> » a un type non pointeur « v8::Persistent<v8::String> »
  197 |                         if(bson->longString->StrictEquals(constructorString))
      |                                            ^~
../ext/bson.cc:203:54: erreur: l'opérande de base de « -> » a un type non pointeur « v8::Persistent<v8::String> »
  203 |                         else if(bson->timestampString->StrictEquals(constructorString))
      |                                                      ^~
../ext/bson.cc:209:53: erreur: l'opérande de base de « -> » a un type non pointeur « v8::Persistent<v8::String> »
  209 |                         else if(bson->objectIDString->StrictEquals(constructorString))
      |                                                     ^~
../ext/bson.cc:214:51: erreur: l'opérande de base de « -> » a un type non pointeur « v8::Persistent<v8::String> »
  214 |                         else if(bson->binaryString->StrictEquals(constructorString))
      |                                                   ^~
../ext/bson.cc:218:62: erreur: pas de fonction concordante pour l'appel à « v8::Object::Get(v8::Persistent<v8::String>&) »
  218 |                                 uint32_t length = object->Get(bson->_binaryPositionString)->Uint32Value();
      |                                                   ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:290:43: note: candidat : « v8::MaybeLocal<v8::Value> v8::Object::Get(v8::Local<v8::Context>, v8::Local<v8::Value>) »
  290 |   V8_WARN_UNUSED_RESULT MaybeLocal<Value> Get(Local<Context> context,
      |                                           ^~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:290:43: note:   le candidat attend 2 arguments, 1 fourni(s)
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:293:43: note: candidat : « v8::MaybeLocal<v8::Value> v8::Object::Get(v8::Local<v8::Context>, uint32_t) »
  293 |   V8_WARN_UNUSED_RESULT MaybeLocal<Value> Get(Local<Context> context,
      |                                           ^~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:293:43: note:   le candidat attend 2 arguments, 1 fourni(s)
../ext/bson.cc:219:70: erreur: pas de fonction concordante pour l'appel à « v8::Object::Get(v8::Persistent<v8::String>&) »
  219 |                                 Local<Object> bufferObj = object->Get(bson->_binaryBufferString)->ToObject();
      |                                                           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:290:43: note: candidat : « v8::MaybeLocal<v8::Value> v8::Object::Get(v8::Local<v8::Context>, v8::Local<v8::Value>) »
  290 |   V8_WARN_UNUSED_RESULT MaybeLocal<Value> Get(Local<Context> context,
      |                                           ^~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:290:43: note:   le candidat attend 2 arguments, 1 fourni(s)
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:293:43: note: candidat : « v8::MaybeLocal<v8::Value> v8::Object::Get(v8::Local<v8::Context>, uint32_t) »
  293 |   V8_WARN_UNUSED_RESULT MaybeLocal<Value> Get(Local<Context> context,
      |                                           ^~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:293:43: note:   le candidat attend 2 arguments, 1 fourni(s)
../ext/bson.cc:224:47: erreur: pas de fonction concordante pour l'appel à « v8::Object::Get(v8::Persistent<v8::String>&) »
  224 |                                 if(object->Get(bson->_binarySubTypeString)->Int32Value() == 0x02) {
      |                                    ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:290:43: note: candidat : « v8::MaybeLocal<v8::Value> v8::Object::Get(v8::Local<v8::Context>, v8::Local<v8::Value>) »
  290 |   V8_WARN_UNUSED_RESULT MaybeLocal<Value> Get(Local<Context> context,
      |                                           ^~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:290:43: note:   le candidat attend 2 arguments, 1 fourni(s)
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:293:43: note: candidat : « v8::MaybeLocal<v8::Value> v8::Object::Get(v8::Local<v8::Context>, uint32_t) »
  293 |   V8_WARN_UNUSED_RESULT MaybeLocal<Value> Get(Local<Context> context,
      |                                           ^~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:293:43: note:   le candidat attend 2 arguments, 1 fourni(s)
../ext/bson.cc:230:51: erreur: l'opérande de base de « -> » a un type non pointeur « v8::Persistent<v8::String> »
  230 |                         else if(bson->doubleString->StrictEquals(constructorString))
      |                                                   ^~
../ext/bson.cc:235:51: erreur: l'opérande de base de « -> » a un type non pointeur « v8::Persistent<v8::String> »
  235 |                         else if(bson->symbolString->StrictEquals(constructorString))
      |                                                   ^~
../ext/bson.cc:238:76: erreur: pas de fonction concordante pour l'appel à « v8::Object::Get(v8::Persistent<v8::String>&) »
  238 |                                 this->WriteLengthPrefixedString(object->Get(bson->_symbolValueString)->ToString());
      |                                                                 ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:290:43: note: candidat : « v8::MaybeLocal<v8::Value> v8::Object::Get(v8::Local<v8::Context>, v8::Local<v8::Value>) »
  290 |   V8_WARN_UNUSED_RESULT MaybeLocal<Value> Get(Local<Context> context,
      |                                           ^~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:290:43: note:   le candidat attend 2 arguments, 1 fourni(s)
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:293:43: note: candidat : « v8::MaybeLocal<v8::Value> v8::Object::Get(v8::Local<v8::Context>, uint32_t) »
  293 |   V8_WARN_UNUSED_RESULT MaybeLocal<Value> Get(Local<Context> context,
      |                                           ^~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:293:43: note:   le candidat attend 2 arguments, 1 fourni(s)
../ext/bson.cc:240:49: erreur: l'opérande de base de « -> » a un type non pointeur « v8::Persistent<v8::String> »
  240 |                         else if(bson->codeString->StrictEquals(constructorString))
      |                                                 ^~
../ext/bson.cc:242:76: erreur: pas de fonction concordante pour l'appel à « v8::Object::Get(v8::Persistent<v8::String>&) »
  242 |                                 const Local<String>& function = object->Get(bson->_codeCodeString)->ToString();
      |                                                                 ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:290:43: note: candidat : « v8::MaybeLocal<v8::Value> v8::Object::Get(v8::Local<v8::Context>, v8::Local<v8::Value>) »
  290 |   V8_WARN_UNUSED_RESULT MaybeLocal<Value> Get(Local<Context> context,
      |                                           ^~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:290:43: note:   le candidat attend 2 arguments, 1 fourni(s)
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:293:43: note: candidat : « v8::MaybeLocal<v8::Value> v8::Object::Get(v8::Local<v8::Context>, uint32_t) »
  293 |   V8_WARN_UNUSED_RESULT MaybeLocal<Value> Get(Local<Context> context,
      |                                           ^~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:293:43: note:   le candidat attend 2 arguments, 1 fourni(s)
../ext/bson.cc:243:73: erreur: pas de fonction concordante pour l'appel à « v8::Object::Get(v8::Persistent<v8::String>&) »
  243 |                                 const Local<Object>& scope = object->Get(bson->_codeScopeString)->ToObject();
      |                                                              ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:290:43: note: candidat : « v8::MaybeLocal<v8::Value> v8::Object::Get(v8::Local<v8::Context>, v8::Local<v8::Value>) »
  290 |   V8_WARN_UNUSED_RESULT MaybeLocal<Value> Get(Local<Context> context,
      |                                           ^~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:290:43: note:   le candidat attend 2 arguments, 1 fourni(s)
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:293:43: note: candidat : « v8::MaybeLocal<v8::Value> v8::Object::Get(v8::Local<v8::Context>, uint32_t) »
  293 |   V8_WARN_UNUSED_RESULT MaybeLocal<Value> Get(Local<Context> context,
      |                                           ^~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:293:43: note:   le candidat attend 2 arguments, 1 fourni(s)
../ext/bson.cc:249:73: erreur: pas de fonction concordante pour l'appel à « v8::Object::GetOwnPropertyNames() »
  249 |                 uint32_t propertyNameLength = scope->GetOwnPropertyNames()->Length();
      |                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:410:43: note: candidat : « v8::MaybeLocal<v8::Array> v8::Object::GetOwnPropertyNames(v8::Local<v8::Context>) »
  410 |   V8_WARN_UNUSED_RESULT MaybeLocal<Array> GetOwnPropertyNames(
      |                                           ^~~~~~~~~~~~~~~~~~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:410:43: note:   le candidat attend 1 argument, 0 fourni(s)
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:419:43: note: candidat : « v8::MaybeLocal<v8::Array> v8::Object::GetOwnPropertyNames(v8::Local<v8::Context>, v8::PropertyFilter, v8::KeyConversionMode) »
  419 |   V8_WARN_UNUSED_RESULT MaybeLocal<Array> GetOwnPropertyNames(
      |                                           ^~~~~~~~~~~~~~~~~~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:419:43: note:   le candidat attend 3 arguments, 0 fourni(s)
../ext/bson.cc:256:91: erreur: pas de fonction concordante pour l'appel à « v8::String::ToString() »
  256 |                                         this->WriteLengthPrefixedString(function->ToString());
      |                                                                         ~~~~~~~~~~~~~~~~~~^~
Dans le fichier inclus depuis /home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-primitive.h:11:
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-value.h:360:44: note: candidat : « v8::MaybeLocal<v8::String> v8::Value::ToString(v8::Local<v8::Context>) const »
  360 |   V8_WARN_UNUSED_RESULT MaybeLocal<String> ToString(
      |                                            ^~~~~~~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-value.h:360:44: note:   le candidat attend 1 argument, 0 fourni(s)
../ext/bson.cc:263:91: erreur: pas de fonction concordante pour l'appel à « v8::String::ToString() »
  263 |                                         this->WriteLengthPrefixedString(function->ToString());
      |                                                                         ~~~~~~~~~~~~~~~~~~^~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-value.h:360:44: note: candidat : « v8::MaybeLocal<v8::String> v8::Value::ToString(v8::Local<v8::Context>) const »
  360 |   V8_WARN_UNUSED_RESULT MaybeLocal<String> ToString(
      |                                            ^~~~~~~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-value.h:360:44: note:   le candidat attend 1 argument, 0 fourni(s)
../ext/bson.cc:266:50: erreur: l'opérande de base de « -> » a un type non pointeur « v8::Persistent<v8::String> »
  266 |                         else if(bson->dbrefString->StrictEquals(constructorString))
      |                                                  ^~
../ext/bson.cc:274:68: erreur: pas de fonction concordante pour l'appel à « v8::Object::Get(v8::Persistent<v8::String>&) »
  274 |                                 SerializeValue(refType, object->Get(bson->_dbRefNamespaceString));
      |                                                         ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:290:43: note: candidat : « v8::MaybeLocal<v8::Value> v8::Object::Get(v8::Local<v8::Context>, v8::Local<v8::Value>) »
  290 |   V8_WARN_UNUSED_RESULT MaybeLocal<Value> Get(Local<Context> context,
      |                                           ^~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:290:43: note:   le candidat attend 2 arguments, 1 fourni(s)
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:293:43: note: candidat : « v8::MaybeLocal<v8::Value> v8::Object::Get(v8::Local<v8::Context>, uint32_t) »
  293 |   V8_WARN_UNUSED_RESULT MaybeLocal<Value> Get(Local<Context> context,
      |                                           ^~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:293:43: note:   le candidat attend 2 arguments, 1 fourni(s)
../ext/bson.cc:278:67: erreur: pas de fonction concordante pour l'appel à « v8::Object::Get(v8::Persistent<v8::String>&) »
  278 |                                 SerializeValue(idType, object->Get(bson->_dbRefOidString));
      |                                                        ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:290:43: note: candidat : « v8::MaybeLocal<v8::Value> v8::Object::Get(v8::Local<v8::Context>, v8::Local<v8::Value>) »
  290 |   V8_WARN_UNUSED_RESULT MaybeLocal<Value> Get(Local<Context> context,
      |                                           ^~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:290:43: note:   le candidat attend 2 arguments, 1 fourni(s)
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:293:43: note: candidat : « v8::MaybeLocal<v8::Value> v8::Object::Get(v8::Local<v8::Context>, uint32_t) »
  293 |   V8_WARN_UNUSED_RESULT MaybeLocal<Value> Get(Local<Context> context,
      |                                           ^~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:293:43: note:   le candidat attend 2 arguments, 1 fourni(s)
../ext/bson.cc:280:77: erreur: pas de fonction concordante pour l'appel à « v8::Object::Get(v8::Persistent<v8::String>&) »
  280 |                                 const Local<Value>& refDbValue = object->Get(bson->_dbRefDbString);
      |                                                                  ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:290:43: note: candidat : « v8::MaybeLocal<v8::Value> v8::Object::Get(v8::Local<v8::Context>, v8::Local<v8::Value>) »
  290 |   V8_WARN_UNUSED_RESULT MaybeLocal<Value> Get(Local<Context> context,
      |                                           ^~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:290:43: note:   le candidat attend 2 arguments, 1 fourni(s)
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:293:43: note: candidat : « v8::MaybeLocal<v8::Value> v8::Object::Get(v8::Local<v8::Context>, uint32_t) »
  293 |   V8_WARN_UNUSED_RESULT MaybeLocal<Value> Get(Local<Context> context,
      |                                           ^~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:293:43: note:   le candidat attend 2 arguments, 1 fourni(s)
../ext/bson.cc:291:51: erreur: l'opérande de base de « -> » a un type non pointeur « v8::Persistent<v8::String> »
  291 |                         else if(bson->minKeyString->StrictEquals(constructorString))
      |                                                   ^~
../ext/bson.cc:295:51: erreur: l'opérande de base de « -> » a un type non pointeur « v8::Persistent<v8::String> »
  295 |                         else if(bson->maxKeyString->StrictEquals(constructorString))
      |                                                   ^~
../ext/bson.cc: Dans la fonction membre « v8::Local<v8::String> BSONDeserializer::ReadCString() »:
../ext/bson.cc:352:24: erreur: « New » n'est pas un membre de « v8::String »
  352 |         return String::New(start, (int32_t) (p-start-1) );
      |                        ^~~
../ext/bson.cc: Dans la fonction membre « v8::Local<v8::String> BSONDeserializer::ReadString() »:
../ext/bson.cc:387:24: erreur: « New » n'est pas un membre de « v8::String »
  387 |         return String::New(start, length-1);
      |                        ^~~
../ext/bson.cc: Dans la fonction membre « v8::Local<v8::String> BSONDeserializer::ReadObjectId() »:
../ext/bson.cc:397:24: erreur: « New » n'est pas un membre de « v8::String »
  397 |         return String::New(objectId, 12);
      |                        ^~~
../ext/bson.cc: Au niveau global:
../ext/bson.cc:400:1: erreur: « Handle » ne nomme pas un type
  400 | Handle<Value> BSONDeserializer::DeserializeDocument()
      | ^~~~~~
../ext/bson.cc:409:1: erreur: « Handle » ne nomme pas un type
  409 | Handle<Value> BSONDeserializer::DeserializeDocumentInternal()
      | ^~~~~~
../ext/bson.cc:435:1: erreur: « Handle » ne nomme pas un type
  435 | Handle<Value> BSONDeserializer::DeserializeArray()
      | ^~~~~~
../ext/bson.cc:444:1: erreur: « Handle » ne nomme pas un type
  444 | Handle<Value> BSONDeserializer::DeserializeArrayInternal()
      | ^~~~~~
../ext/bson.cc:460:1: erreur: « Handle » ne nomme pas un type
  460 | Handle<Value> BSONDeserializer::DeserializeValue(BsonType type)
      | ^~~~~~
../ext/bson.cc:584:8: erreur: « Handle » ne nomme pas un type
  584 | static Handle<Value> VException(const char *msg)
      |        ^~~~~~
../ext/bson.cc: Dans le constructeur « BSON::BSON() »:
../ext/bson.cc:595:59: erreur: « New » n'est pas un membre de « v8::String »
  595 |         _bsontypeString = Persistent<String>::New(String::New("_bsontype"));
      |                                                           ^~~
../ext/bson.cc:596:58: erreur: « New » n'est pas un membre de « v8::String »
  596 |         _longLowString = Persistent<String>::New(String::New("low_"));
      |                                                          ^~~
../ext/bson.cc:597:59: erreur: « New » n'est pas un membre de « v8::String »
  597 |         _longHighString = Persistent<String>::New(String::New("high_"));
      |                                                           ^~~
../ext/bson.cc:598:61: erreur: « New » n'est pas un membre de « v8::String »
  598 |         _objectIDidString = Persistent<String>::New(String::New("id"));
      |                                                             ^~~
../ext/bson.cc:599:65: erreur: « New » n'est pas un membre de « v8::String »
  599 |         _binaryPositionString = Persistent<String>::New(String::New("position"));
      |                                                                 ^~~
../ext/bson.cc:600:64: erreur: « New » n'est pas un membre de « v8::String »
  600 |         _binarySubTypeString = Persistent<String>::New(String::New("sub_type"));
      |                                                                ^~~
../ext/bson.cc:601:63: erreur: « New » n'est pas un membre de « v8::String »
  601 |         _binaryBufferString = Persistent<String>::New(String::New("buffer"));
      |                                                               ^~~
../ext/bson.cc:602:62: erreur: « New » n'est pas un membre de « v8::String »
  602 |         _doubleValueString = Persistent<String>::New(String::New("value"));
      |                                                              ^~~
../ext/bson.cc:603:62: erreur: « New » n'est pas un membre de « v8::String »
  603 |         _symbolValueString = Persistent<String>::New(String::New("value"));
      |                                                              ^~~
../ext/bson.cc:604:59: erreur: « New » n'est pas un membre de « v8::String »
  604 |         _dbRefRefString = Persistent<String>::New(String::New("$ref"));
      |                                                           ^~~
../ext/bson.cc:605:61: erreur: « New » n'est pas un membre de « v8::String »
  605 |         _dbRefIdRefString = Persistent<String>::New(String::New("$id"));
      |                                                             ^~~
../ext/bson.cc:606:61: erreur: « New » n'est pas un membre de « v8::String »
  606 |         _dbRefDbRefString = Persistent<String>::New(String::New("$db"));
      |                                                             ^~~
../ext/bson.cc:607:65: erreur: « New » n'est pas un membre de « v8::String »
  607 |         _dbRefNamespaceString = Persistent<String>::New(String::New("namespace"));
      |                                                                 ^~~
../ext/bson.cc:608:58: erreur: « New » n'est pas un membre de « v8::String »
  608 |         _dbRefDbString = Persistent<String>::New(String::New("db"));
      |                                                          ^~~
../ext/bson.cc:609:59: erreur: « New » n'est pas un membre de « v8::String »
  609 |         _dbRefOidString = Persistent<String>::New(String::New("oid"));
      |                                                           ^~~
../ext/bson.cc:610:59: erreur: « New » n'est pas un membre de « v8::String »
  610 |         _codeCodeString = Persistent<String>::New(String::New("code"));
      |                                                           ^~~
../ext/bson.cc:611:60: erreur: « New » n'est pas un membre de « v8::String »
  611 |         _codeScopeString = Persistent<String>::New(String::New("scope"));
      |                                                            ^~~
../ext/bson.cc:612:57: erreur: « New » n'est pas un membre de « v8::String »
  612 |         _toBSONString = Persistent<String>::New(String::New("toBSON"));
      |                                                         ^~~
../ext/bson.cc:614:54: erreur: « New » n'est pas un membre de « v8::String »
  614 |         longString = Persistent<String>::New(String::New("Long"));
      |                                                      ^~~
../ext/bson.cc:615:58: erreur: « New » n'est pas un membre de « v8::String »
  615 |         objectIDString = Persistent<String>::New(String::New("ObjectID"));
      |                                                          ^~~
../ext/bson.cc:616:56: erreur: « New » n'est pas un membre de « v8::String »
  616 |         binaryString = Persistent<String>::New(String::New("Binary"));
      |                                                        ^~~
../ext/bson.cc:617:54: erreur: « New » n'est pas un membre de « v8::String »
  617 |         codeString = Persistent<String>::New(String::New("Code"));
      |                                                      ^~~
../ext/bson.cc:618:55: erreur: « New » n'est pas un membre de « v8::String »
  618 |         dbrefString = Persistent<String>::New(String::New("DBRef"));
      |                                                       ^~~
../ext/bson.cc:619:56: erreur: « New » n'est pas un membre de « v8::String »
  619 |         symbolString = Persistent<String>::New(String::New("Symbol"));
      |                                                        ^~~
../ext/bson.cc:620:56: erreur: « New » n'est pas un membre de « v8::String »
  620 |         doubleString = Persistent<String>::New(String::New("Double"));
      |                                                        ^~~
../ext/bson.cc:621:59: erreur: « New » n'est pas un membre de « v8::String »
  621 |         timestampString = Persistent<String>::New(String::New("Timestamp"));
      |                                                           ^~~
../ext/bson.cc:622:56: erreur: « New » n'est pas un membre de « v8::String »
  622 |         minKeyString = Persistent<String>::New(String::New("MinKey"));
      |                                                        ^~~
../ext/bson.cc:623:56: erreur: « New » n'est pas un membre de « v8::String »
  623 |         maxKeyString = Persistent<String>::New(String::New("MaxKey"));
      |                                                        ^~~
../ext/bson.cc: Au niveau global:
../ext/bson.cc:626:6: erreur: variable ou champ « Initialize » déclaré « void »
  626 | void BSON::Initialize(v8::Handle<v8::Object> target)
      |      ^~~~
../ext/bson.cc:626:27: erreur: « Handle » n'est pas un membre de « v8 »; vouliez-vous employer « JobHandle » ?
  626 | void BSON::Initialize(v8::Handle<v8::Object> target)
      |                           ^~~~~~
      |                           JobHandle
../ext/bson.cc:626:44: erreur: expected primary-expression before « > » token
  626 | void BSON::Initialize(v8::Handle<v8::Object> target)
      |                                            ^
../ext/bson.cc:626:46: erreur: « target » n'a pas été déclaré dans cette portée
  626 | void BSON::Initialize(v8::Handle<v8::Object> target)
      |                                              ^~~~~~
../ext/bson.cc:647:1: erreur: « Handle » ne nomme pas un type
  647 | Handle<Value> BSON::New(const Arguments &args)
      | ^~~~~~
../ext/bson.cc:729:1: erreur: « Handle » ne nomme pas un type
  729 | Handle<Value> BSON::BSONDeserialize(const Arguments &args)
      | ^~~~~~
../ext/bson.cc:803:46: erreur: « Handle » ne nomme pas un type
  803 | Local<Object> BSON::GetSerializeObject(const Handle<Value>& argValue)
      |                                              ^~~~~~
../ext/bson.cc:803:52: erreur: expected « , » or « ... » before « < » token
  803 | Local<Object> BSON::GetSerializeObject(const Handle<Value>& argValue)
      |                                                    ^
../ext/bson.cc: Dans la fonction membre « v8::Local<v8::Object> BSON::GetSerializeObject(int) »:
../ext/bson.cc:805:32: erreur: « argValue » n'a pas été déclaré dans cette portée
  805 |         Local<Object> object = argValue->ToObject();
      |                                ^~~~~~~~
../ext/bson.cc:806:23: erreur: pas de fonction concordante pour l'appel à « v8::Object::Has(v8::Persistent<v8::String>&) »
  806 |         if(object->Has(_toBSONString))
      |            ~~~~~~~~~~~^~~~~~~~~~~~~~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:325:37: note: candidat : « v8::Maybe<bool> v8::Object::Has(v8::Local<v8::Context>, v8::Local<v8::Value>) »
  325 |   V8_WARN_UNUSED_RESULT Maybe<bool> Has(Local<Context> context,
      |                                     ^~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:325:37: note:   le candidat attend 2 arguments, 1 fourni(s)
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:331:37: note: candidat : « v8::Maybe<bool> v8::Object::Has(v8::Local<v8::Context>, uint32_t) »
  331 |   V8_WARN_UNUSED_RESULT Maybe<bool> Has(Local<Context> context, uint32_t index);
      |                                     ^~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:331:37: note:   le candidat attend 2 arguments, 1 fourni(s)
../ext/bson.cc:808:57: erreur: pas de fonction concordante pour l'appel à « v8::Object::Get(v8::Persistent<v8::String>&) »
  808 |                 const Local<Value>& toBSON = object->Get(_toBSONString);
      |                                              ~~~~~~~~~~~^~~~~~~~~~~~~~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:290:43: note: candidat : « v8::MaybeLocal<v8::Value> v8::Object::Get(v8::Local<v8::Context>, v8::Local<v8::Value>) »
  290 |   V8_WARN_UNUSED_RESULT MaybeLocal<Value> Get(Local<Context> context,
      |                                           ^~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:290:43: note:   le candidat attend 2 arguments, 1 fourni(s)
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:293:43: note: candidat : « v8::MaybeLocal<v8::Value> v8::Object::Get(v8::Local<v8::Context>, uint32_t) »
  293 |   V8_WARN_UNUSED_RESULT MaybeLocal<Value> Get(Local<Context> context,
      |                                           ^~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-object.h:293:43: note:   le candidat attend 2 arguments, 1 fourni(s)
../ext/bson.cc:811:74: erreur: pas de fonction concordante pour l'appel à « v8::Function::Call(v8::Local<v8::Object>&, int, NULL) »
  811 |                 Local<Value> result = Local<Function>::Cast(toBSON)->Call(object, 0, NULL);
      |                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
Dans le fichier inclus depuis /home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8.h:33:
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-function.h:55:43: note: candidat : « v8::MaybeLocal<v8::Value> v8::Function::Call(v8::Local<v8::Context>, v8::Local<v8::Value>, int, v8::Local<v8::Value>*) »
   55 |   V8_WARN_UNUSED_RESULT MaybeLocal<Value> Call(Local<Context> context,
      |                                           ^~~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-function.h:55:43: note:   le candidat attend 4 arguments, 3 fourni(s)
../ext/bson.cc:813:40: erreur: pas de fonction concordante pour l'appel à « v8::Value::ToObject() »
  813 |                 return result->ToObject();
      |                        ~~~~~~~~~~~~~~~~^~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-value.h:372:44: note: candidat : « v8::MaybeLocal<v8::Object> v8::Value::ToObject(v8::Local<v8::Context>) const »
  372 |   V8_WARN_UNUSED_RESULT MaybeLocal<Object> ToObject(
      |                                            ^~~~~~~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/v8-value.h:372:44: note:   le candidat attend 1 argument, 0 fourni(s)
../ext/bson.cc: Au niveau global:
../ext/bson.cc:821:1: erreur: « Handle » ne nomme pas un type
  821 | Handle<Value> BSON::BSONSerialize(const Arguments &args)
      | ^~~~~~
../ext/bson.cc:879:1: erreur: « Handle » ne nomme pas un type
  879 | Handle<Value> BSON::CalculateObjectSize(const Arguments &args)
      | ^~~~~~
../ext/bson.cc:897:1: erreur: « Handle » ne nomme pas un type
  897 | Handle<Value> BSON::SerializeWithBufferAndIndex(const Arguments &args)
      | ^~~~~~
../ext/bson.cc:938:1: erreur: « Handle » ne nomme pas un type
  938 | Handle<Value> BSON::BSONDeserializeStream(const Arguments &args)
      | ^~~~~~
../ext/bson.cc:1000:17: erreur: variable ou champ « init » déclaré « void »
 1000 | extern "C" void init(Handle<Object> target)
      |                 ^~~~
../ext/bson.cc:1000:22: erreur: « Handle » n'a pas été déclaré dans cette portée
 1000 | extern "C" void init(Handle<Object> target)
      |                      ^~~~~~
../ext/bson.cc:1000:35: erreur: expected primary-expression before « > » token
 1000 | extern "C" void init(Handle<Object> target)
      |                                   ^
../ext/bson.cc:1000:37: erreur: « target » n'a pas été déclaré dans cette portée
 1000 | extern "C" void init(Handle<Object> target)
      |                                     ^~~~~~
Dans le fichier inclus depuis ../ext/bson.cc:22:
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/node.h:1014:7: attention: transtypage entre types de fonctions incompatibles de « void (*)(int) » vers « node::addon_register_func » {aka « void (*)(v8::Local<v8::Object>, v8::Local<v8::Value>, void*) »} [-Wcast-function-type]
 1014 |       (node::addon_register_func) (regfunc),                          \
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/snir2g1/.cache/node-gyp/18.18.2/include/node/node.h:1048:3: note: dans l'expansion de la macro « NODE_MODULE_X »
 1048 |   NODE_MODULE_X(modname, regfunc, NULL, 0)  // NOLINT (readability/null_usage)
      |   ^~~~~~~~~~~~~
../ext/bson.cc:1006:1: note: dans l'expansion de la macro « NODE_MODULE »
 1006 | NODE_MODULE(bson, BSON::Initialize);
      | ^~~~~~~~~~~
make: *** [bson.target.mk:108 : Release/obj.target/bson/ext/bson.o] Erreur 1
gyp ERR! build error 
gyp ERR! stack Error: `make` failed with exit code: 2
gyp ERR! stack at ChildProcess.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/node-gyp/lib/build.js:209:23)
gyp ERR! System Linux 6.1.10-200.fc37.x86_64
gyp ERR! command "/usr/bin/node-18" "/usr/local/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js" "rebuild"
gyp ERR! cwd /home/snir2g1/Documents/Dossiers2023/Projet2023/IHM+SERVEUR/Node-FIRST-API/node_modules/objectid/node_modules/bson
gyp ERR! node -v v18.18.2
gyp ERR! node-gyp -v v10.0.1
gyp ERR! not ok 
